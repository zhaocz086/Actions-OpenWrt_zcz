#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt x86-cups

on: 
#  release:
#    types: [published]
  push:
    paths:
      - '.config-x86-cups'
#  push:
#    branches: 
#      - master
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        #docker rmi `docker images -q`
        docker images
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: |
        cd openwrt
        echo "src-git cups https://github.com/Gr4ffy/lede-cups.git" >> feeds.conf.default
        cat ./feeds.conf.default
        ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      env:
        CONFIG_FILE: '.config-x86-cups'
        DIY_SH: 'diy.sh'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin

    - name: Generate tag
      run: |
        echo ::set-env name=RELEASE_TAG::"$(TZ=UTC-8 date +"%Y.%m.%d.%H")"
        mkdir Release_files
        find openwrt/bin -name openwrt*.img -exec mv {} Release_files \;
        find openwrt/bin -name sha256sums   -exec mv {} Release_files \;
        rm Release_files/*rootfs*

    - name: Upload to release
      uses: meeDamian/github-release@1.0
      with:
        token: ${{ secrets.OPENWRT_TOKEN }}
        body: Automatic Build | 自动编译 x86-cups
        gzip: folders
        files: x86-cups:Release_files/
        allow_override: true

